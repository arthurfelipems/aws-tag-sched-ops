---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Start, reboot, stop and back up AWS resources using tag-based schedules. Copyright 2017, Paul Marcelin. https://github.com/sqlxpert/aws-tag-sched-ops/"


# To check YAML syntax, first complete the setup steps
# in aws-tag-sched-ops/requirements.txt and then run:
#   yamllint -c aws-tag-sched-ops/.yamllint aws-tag-sched-ops/cloudformation/aws_tag_sched_ops.yaml


# https://github.com/sqlxpert/aws-tag-sched-ops/
#
# Copyright 2017, Paul Marcelin
#
# This file is part of TagSchedOps.
#
# TagSchedOps is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# TagSchedOps is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with TagSchedOps. If not, see http://www.gnu.org/licenses/


Parameters:

  LambdaCodeS3Bucket:
    Type: String
    Description: "Name (with no prefix of any kind) of the S3 bucket where AWS Lambda function source code is stored. Carefully restrict write (PutObject) access."
  TagSchedOpsPerformCodeName:
    Type: String
    Description: "Name (without the .py.zip suffix) of the file (S3 object) containing compressed source code for the TagSchedOpsPerform AWS Lamba function. Accept the default unless directed otherwise."
    Default: "aws_tag_sched_ops_perform"
  TagSchedOpsPerformCodeVersion:
    Type: String
    Description: "Version ID for the desired version of the TagSchedOpsPerform source code S3 object. Leave blank, unless object versioning has been turned on for the S3 bucket."
    Default: ""

  # Do not validate at CloudFormation level, in case underlying APIs change:

  TagSchedOpsPerformLogRetainDays:
    Type: Number
    Description: "How many days to keep logs from the TagSchedOpsPerform AWS Lambda function. Typical values are 1, 7, 14, 30, 60, and 90 days, but for the full list, see http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html"
    Default: 30
  TagSchedOpsPerformMemoryMB:
    Type: Number
    Description: "How many megabytes of memory to allocate to the TagSchedOpsPerform AWS Lambda function. Increase only in case of out-of-memory errors."
    Default: 128
  TagSchedOpsPerformTimeoutSecs:
    Type: Number
    Description: "How many seconds before execution of the TagSchedOpsPerform AWS Lambda function is canceled. Increase only in case of time-out errors."
    Default: 120

Conditions:
  TagSchedOpsPerformCodeNoS3ObjVersion:
    !Equals [ !Ref TagSchedOpsPerformCodeVersion, "" ]

Resources:


  # This file contains many repeated blocks that would be good
  # candidates for YAML anchors/aliases. Unforunately, submitting
  # a CloudFormation template with aliases produces the following
  # error: "YAML aliases are not allowed in CloudFormation templates"


  Ec2TagSchedOpsPerform:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All EC2 instances, EBS volumes: describe, get tags. Tagged EC2 instances: start, reboot, stop. All EC2 instances: create image (allows reboot!). All EC2 EBS volumes: create snapshot. All EC2 images and EBS snapshots: tag, but cannot tag for deletion, or delete."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action: "ec2:DescribeInstances"
            Resource: "*"

          - Effect: Allow
            Action: "ec2:StartInstances"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-start": "*"

          - Effect: Allow
            Action: "ec2:RebootInstances"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-reboot": "*"

          - Effect: Allow
            Action: "ec2:StopInstances"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-stop": "*"

          # WARNING: CreateImage without NoReboot reboots an EC2 instance,
          #          even if a policy denies RebootInstances!
          - Effect: Allow
            Action: "ec2:CreateImage"
            Resource: "*"
          # Resource-level permissions not supported, so
          # "ec2:ResourceTag/..." Condition key doesn't work.
          - Effect: Allow
            Action: "ec2:CreateTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}::image/*"

          - Effect: Allow
            Action: "ec2:DescribeVolumes"
            Resource: "*"

          - Effect: Allow
            Action: "ec2:CreateSnapshot"
            Resource: "*"
            # Resource-level permissions not supported, so
            # "ec2:ResourceTag/..." Condition key doesn't work.
          - Effect: Allow
            Action: "ec2:CreateTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"

          # Security: an entity that creates cannot delete

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"

          # Security: An entity that creates cannot tag for deletion

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"


  RdsTagSchedOpsPerform:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All RDS instances: describe, get tags. Tagged RDS instances: start, reboot (includes failover), stop (includes create snapshot), create snapshot. All RDS snapshots: tag, but cannot tag for deletion, or delete)."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action: "rds:DescribeDBInstances"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"

          - Effect: Allow
            Action: "rds:StartDBInstance"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-start": "*"

          - Effect: Allow
            Action: "rds:RebootDBInstance"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot": "*"

          - Effect: Allow
            Action: "rds:RebootDBInstance"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot-failover": "*"

          - Effect: Allow
            Action: "rds:StopDBInstance"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-stop": "*"

          - Effect: Allow
            Action: "rds:StopDBInstance"  # With snapshot option
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot-stop": "*"
          - Effect: Allow
            Action: "rds:AddTagsToResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          - Effect: Allow
            Action: "rds:CreateDBSnapshot"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot": "*"

          - Effect: Deny  # Security: an entity that creates cannot delete...
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Deny  # Security: ...and cannot tag for deletion.
            Action: "rds:AddTagsToResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:snapshot-tag/managed-delete": "*"


  TagSchedOpsPerformLambdaRole:
    Type: "AWS::IAM::Role"
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: "lambda.amazonaws.com" }
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref Ec2TagSchedOpsPerform
        - !Ref RdsTagSchedOpsPerform


  TagSchedOpsPerformLambdaFn:
    Type: "AWS::Lambda::Function"
    # Not a strict dependency, from CloudFormation's perspective.
    # This policy need not have been created and attached before the
    # AWS Lambda function is created, but rather, before it first runs:
    # DependsOn: SchedOpsPerformPol
    DeletionPolicy: Delete
    Properties:
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Join [ ".", [ !Ref TagSchedOpsPerformCodeName, "py", "zip" ] ]
        S3ObjectVersion: !If [ TagSchedOpsPerformCodeNoS3ObjVersion, !Ref "AWS::NoValue", !Ref TagSchedOpsPerformCodeVersion ]
      Handler: !Join [ ".", [ !Ref TagSchedOpsPerformCodeName, "lambda_handler" ] ]
      MemorySize: !Ref TagSchedOpsPerformMemoryMB
      Role: !GetAtt TagSchedOpsPerformLambdaRole.Arn
      Runtime: "python3.6"
      Timeout: !Ref TagSchedOpsPerformTimeoutSecs


  TagSchedOpsPerformLogGrp:
    Type: "AWS::Logs::LogGroup"
    DeletionPolicy: Retain  # Might want to review after function is deleted
    Properties:
      # AWS Lambda functions log to streams named after them,
      # so a stream name assigned by CloudFormation would not work.
      # Disadvantage: Custom name prevents modification by CloudFormation.
      LogGroupName: !Join [ "/", [ "", "aws", "lambda", !Ref TagSchedOpsPerformLambdaFn ] ]
      RetentionInDays: !Ref TagSchedOpsPerformLogRetainDays


  SchedOpsPerformPol:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "TagSchedOpsPerform log streams: create, and put events. Required when executing that AWS Lambda function."
      Roles:
        - !Ref TagSchedOpsPerformLambdaRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]


  TagSchedOpsPerform10MinEventRule:
    Type: "AWS::Events::Rule"
    DeletionPolicy: Delete
    Properties:
      Description: "Every 10 minutes: run TagSchedOpsPerform AWS Lambda function"
      # Never change once-every-10-minutes scheduling, which
      # is part of the code's schedule tag matching semantics.
      #
      # +1 minute prevents the AWS Lambda function from running twice
      # in the same 10-minute interval, which could happen if the clock
      # of a CloudWatch Events server were slightly slower than the clock
      # of an AWS Lambda server: the Events server could trigger the AWS
      # Lambda function a fraction of a second before the start of the
      # intended interval on the AWS Lambda server's own clock.
      ScheduleExpression: "cron(01,11,21,31,41,51 * * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt TagSchedOpsPerformLambdaFn.Arn
          Id: !Ref TagSchedOpsPerformLambdaFn


  TagSchedOpsPerformInvokeLambdaPerm:
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: Delete
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref TagSchedOpsPerformLambdaFn
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt TagSchedOpsPerform10MinEventRule.Arn


  TagSchedOpsPerformDisableLambdaPerm:
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: Delete
    Properties:
      Action: "lambda:DisableInvokeFunction"
      FunctionName: !Ref TagSchedOpsPerformLambdaFn
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt TagSchedOpsPerform10MinEventRule.Arn


  TagSchedOpsPerformLambdaFnProtect:  # Name in ARN on final line must match!
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "TagSchedOpsPerform Lambda function, CloudWatch log group, log stream, and CloudWatch event: cannot change or delete. TagSchedOpsPerform Lambda function: cannot invoke manually. This policy may not be exhaustive."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Deny
            Action:
              - "lambda:DeleteFunction"
              - "lambda:UpdateFunctionCode"
              - "lambda:PublishVersion"
              - "lambda:UpdateFunctionConfiguration"
              - "lambda:AddPermission"
              - "lambda:InvokeFunction"
            Resource: !GetAtt TagSchedOpsPerformLambdaFn.Arn

          - Effect: Deny
            Action: "lambda:CreateEventSourceMapping"
            Resource: "*"
            Condition:
              ArnEquals:
                "lambda:FunctionArn": !GetAtt TagSchedOpsPerformLambdaFn.Arn

          - Effect: Deny
            Action:
              - "logs:DeleteLogGroup"
              - "logs:DeleteRetentionPolicy"
              - "logs:PutRetentionPolicy"
            Resource: !GetAtt TagSchedOpsPerformLogGrp.Arn

          - Effect: Deny
            Action: "logs:DeleteLogStream"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          - Effect: Deny
            Action:
              - "events:DeleteRule"
              - "events:RemoveTargets"
              - "events:EnableRule"
              - "events:DisableRule"
              - "events:PutRule"
              - "events:PutTargets"
            Resource: !GetAtt TagSchedOpsPerform10MinEventRule.Arn

          - Effect: Deny
            Action:
              - "iam:DeleteRole"
              - "iam:AttachRolePolicy"
              - "iam:DetachRolePolicy"
              - "iam:PutRolePolicy"
              - "iam:DeleteRolePolicy"
              - "iam:UpdateAssumeRolePolicy"
              - "iam:PassRole"
            Resource: !GetAtt TagSchedOpsPerformLambdaRole.Arn

          - Effect: Deny
            Action:
              - "iam:DeletePolicy"
              - "iam:CreatePolicyVersion"
              - "iam:DeletePolicyVersion"
            Resource:
              - !Ref SchedOpsPerformPol
              - !Ref Ec2TagSchedOpsPerform
              - !Ref RdsTagSchedOpsPerform
              # !Ref TagSchedOpsPerformLambdaFnProtect
              # produces a "Circular dependency between resources" error.
              # Work-around:
              - !Sub "arn:aws:iam::${AWS::AccountId}:policy/${AWS::StackName}-TagSchedOpsPerformLambdaFnProtect*"


  Ec2TagSchedOpsAdminister:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All EC2 instances, EBS volumes: describe; view tags; add, delete tags for scheduled operations. All EC2 images, EBS snapshots: describe; view tags; add, delete tags for deletion, but cannot delete images or snapshots. All CloudWatch events: describe. Event for TagSchedOps: enable and disable."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "ec2:DescribeInstances"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeImages"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeTags"
            Resource: "*"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAllValues:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"
                  # Repetitive schedule tags:
                  - "managed-start-periodic"
                  - "managed-reboot-periodic"
                  - "managed-reboot-image-periodic"
                  - "managed-image-periodic"
                  - "managed-stop-periodic"
                  # One-time schedule tags:
                  - "managed-start-once"
                  - "managed-reboot-once"
                  - "managed-reboot-image-once"
                  - "managed-image-once"
                  - "managed-stop-once"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAllValues:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-snapshot"
                  # Repetitive schedule tags:
                  - "managed-snapshot-periodic"
                  # One-time schedule tags:
                  - "managed-snapshot-once"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAllValues:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          # Security: an entity that tags for deletion cannot delete

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"

          # Turn project on or off

          - Effect: Allow
            Action:
              - "events:ListRules"
              - "events:ListRuleNamesByTarget"
              - "events:ListTargetsByRule"
              - "events:DescribeRule"
              - "events:TestEventPattern"  # Necessary for CW Events Console
            Resource: "*"
          - Effect: Allow
            Action:
              - "events:EnableRule"
              - "events:DisableRule"
            Resource: !GetAtt TagSchedOpsPerform10MinEventRule.Arn


  RdsTagSchedOpsAdminister:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All RDS instances: describe; view tags; add, delete tags for scheduled operations. All RDS snapshots: describe; view tags; add, delete tags for deletion, but cannot delete snapshots.  All CloudWatch events: describe. Event for TagSchedOps: enable and disable. Due to an AWS limitation, ANY tag can be added with an intended tag. Withholding all RDS tagging privileges is safer than relying on this policy."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "rds:DescribeDBInstances"
              - "rds:DescribeDBSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          # The "rds:req-tag/..." Condition key supported by RDS is equivalent
          # to the "aws:RequestTag/..." Condition key supported by EC2. These
          # can be used to require a certain tag (and optionally, a certain
          # value) in tag creation and tag deletion actions -- but ANY OTHER
          # TAGS ARE ALLOWED in the same action.
          #
          # RDS lacks an equivalent to EC2's "aws:TagKeys" Condition key.
          # With "ForAllValues:StringEquals", that Condition key can
          # be used to block tag creation and tag deletion actions that
          # include keys other than the ones listed.
          #
          # Useful references:
          #
          # EC2 (scroll to bottom):
          # http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html
          #
          # RDS (comparison operators like "streq" have since been renamed):
          # https://aws.amazon.com/blogs/security/a-primer-on-rds-resource-level-permissions/

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop": "*"

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-periodic": "*"

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-once": "*"

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"
          - Effect: Deny  # Sec: an entity that tags for deletion cannot delete
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"

          # Turn project on or off

          - Effect: Allow
            Action:
              - "events:ListRules"
              - "events:ListRuleNamesByTarget"
              - "events:ListTargetsByRule"
              - "events:DescribeRule"
              - "events:TestEventPattern"  # Necessary for CW Events Console
            Resource: "*"
          - Effect: Allow
            Action:
              - "events:EnableRule"
              - "events:DisableRule"
            Resource: !GetAtt TagSchedOpsPerform10MinEventRule.Arn


  Ec2TagSchedOpsScheduleOnce:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "EC2 instances, EBS volumes tagged to enable a managed operation: add, delete one-time schedule tags for that operation. All EC2 instances, EBS volumes: describe; view tags; cannot add or delete operation-enabling or repetitive schedule tags. All EC2 images, EBS snapshots: describe; view tags; cannot delete, or tag for deletion."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "ec2:DescribeInstances"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeImages"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeTags"
            Resource: "*"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-start": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-start-once"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-reboot": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-reboot-once"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-reboot-image": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-reboot-image-once"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-image": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-image-once"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-stop": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-stop-once"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-snapshot": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-snapshot-once"

          # Deny addition/modification/deletion of certain other tags

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"
                  # Repetitive schedule tags:
                  - "managed-start-periodic"
                  - "managed-reboot-periodic"
                  - "managed-reboot-image-periodic"
                  - "managed-image-periodic"
                  - "managed-stop-periodic"
          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-snapshot"
                  # Repetitive schedule tags:
                  - "managed-snapshot-periodic"

          # Security: an entity that schedules backups cannot delete

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"  # Resource-level permissions not supported
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"  # Resource-level permissions not supported

          # Security: an entity that schedules backups cannot tag for deletion

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  RdsTagSchedOpsScheduleOnce:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "RDS instances tagged to enable a managed operation: add, delete one-time schedule tags for that operation. All RDS instances: describe; view tags; cannot add or delete operation-enabling or repetitive schedule tags. All RDS snapshots: describe; view tags; cannot delete, or tag for deletion. Due to an AWS limitation, ANY tag can be added with an intended tag. Withholding all RDS tagging privileges is safer than relying on this policy."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "rds:DescribeDBInstances"
              - "rds:DescribeDBSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-start": "*"
                "rds:req-tag/managed-start-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot": "*"
                "rds:req-tag/managed-reboot-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot-failover": "*"
                "rds:req-tag/managed-reboot-failover-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-stop": "*"
                "rds:req-tag/managed-stop-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot": "*"
                "rds:req-tag/managed-snapshot-once": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot-stop": "*"
                "rds:req-tag/managed-snapshot-stop-once": "*"

          # Deny addition/modification/deletion of operation-enabling tags

          # DISABLED due to potential RDS IAM bug
          #
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-start": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-reboot": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-reboot-failover": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-stop": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-snapshot": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-snapshot-stop": "*"

          # Deny addition/modification/deletion of repetitive schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-periodic": "*"

          # Security: An entity that can schedule backups
          #           cannot delete them, or tag them for deletion.

          - Effect: Deny
            Action: "rds:AddTagsToResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"
          - Effect: Deny
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  Ec2TagSchedOpsSchedulePeriodic:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "EC2 instances, EBS volumes tagged to enable a managed operation: add, delete repetitive schedule tags for that operation. All EC2 instances, EBS volumes: describe; view tags; cannot add or delete operation-enabling tags. All EC2 images, EBS snapshots: describe; view tags; cannot delete, or tag for deletion."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "ec2:DescribeInstances"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeImages"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeTags"
            Resource: "*"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-start": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-start-periodic"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-reboot": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-reboot-periodic"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-reboot-image": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-reboot-image-periodic"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-image": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-image-periodic"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-stop": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-stop-periodic"
          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"

            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              StringLike:
                "ec2:ResourceTag/managed-snapshot": "*"
              "ForAllValues:StringLike":
                "aws:TagKeys":
                  - "managed-snapshot-periodic"

          # Deny addition/modification/deletion of operation-enabling tags

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-snapshot"

          # Security: An entity that schedules backups cannot delete

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"

          # Security: an entity that schedules backups cannot tag for deletion

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  RdsTagSchedOpsSchedulePeriodic:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "RDS instances tagged to enable a managed operation: add, delete repetitive schedule tags for that operation. All RDS instances: describe; view tags; cannot add or delete operation-enabling tags. All RDS snapshots: describe; view tags; cannot delete, or tag for deletion. Due to an AWS limitation, ANY tag can be added with an intended tag. Withholding all RDS tagging privileges is safer than relying on this policy."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "rds:DescribeDBInstances"
              - "rds:DescribeDBSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-start": "*"
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot": "*"
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-reboot-failover": "*"
                "rds:req-tag/managed-reboot-failover-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-stop": "*"
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot": "*"
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Allow
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:db-tag/managed-snapshot-stop": "*"
                "rds:req-tag/managed-snapshot-stop-periodic": "*"

          # Deny addition/modification/deletion of operation-enabling tags

          # DISABLED due to potential RDS IAM bug

          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-start": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-reboot": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-reboot-failover": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-stop": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-snapshot": "*"
          # - Effect: Deny
          #   Action:
          #     - "rds:AddTagsToResource"
          #     - "rds:RemoveTagsFromResource"
          #   Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
          #   Condition:
          #     StringLike:
          #       "rds:req-tag/managed-snapshot-stop": "*"

          # Security: An entity that can schedule backups
          #           cannot delete them, or tag them for deletion.

          - Effect: Deny
            Action: "rds:AddTagsToResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"
          - Effect: Deny
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          # See effects of tags

          - Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:GetLogEvents"
              - "logs:FilterLogEvents"
            # Field 6 (counting from 0) of a CloudWatch log group
            # ARN is the log group's name, which in this case is
            # the final name of the AWS Lambda function, including
            # the random string appended by CloudFormation:
            Resource: !Join [ ":", [ !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group", !Select [ 6, !Split [ ":", !GetAtt TagSchedOpsPerformLogGrp.Arn ] ], "log-stream", "*" ] ]

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  Ec2TagSchedOpsTagForDeletion:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All EC2 images, EBS snapshots: describe; view tags; add, delete tags for deletion, but cannot delete images or snapshots. All EC2 instances, EBS volumes: describe; view tags; cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "ec2:DescribeInstances"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeImages"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeTags"
            Resource: "*"

          - Effect: Allow
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAllValues:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          # Security: an entity that tags for deletion cannot create

          - Effect: Deny
            Action: "ec2:CreateImage"
            Resource: "*"
          - Effect: Deny  # Security: ...cannot create...
            Action: "ec2:CreateSnapshot"
            Resource: "*"

          # Security: an entity that tags for deletion cannot delete

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"

          # Deny addition/modification/deletion of certain other tags

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"
                  # Repetitive schedule tags
                  - "managed-start-periodic"
                  - "managed-reboot-periodic"
                  - "managed-reboot-image-periodic"
                  - "managed-image-periodic"
                  - "managed-stop-periodic"
                  # One-time schedule tags:
                  - "managed-start-once"
                  - "managed-reboot-once"
                  - "managed-reboot-image-once"
                  - "managed-image-once"
                  - "managed-stop-once"

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-snapshot"
                  # Repetitive schedule tags:
                  - "managed-snapshot-periodic"
                  # One-time schedule tags:
                  - "managed-snapshot-once"

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  RdsTagSchedOpsTagForDeletion:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All RDS snapshots: describe; view tags; add, delete tags for deletion, but cannot delete snapshots. All RDS instances: describe; view tags; cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags. Due to an AWS limitation, ANY tag can be added with an intended tag. Withholding all RDS tagging privileges is safer than relying on this policy."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action:
              - "rds:DescribeDBInstances"
              - "rds:DescribeDBSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          - Effect: Allow  # Security: an entity that tags for deletion...
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"
          - Effect: Deny  # Security: ...cannot create...
            Action: "rds:CreateDBSnapshot"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Deny  # [another way to create RDS snapshots]
            Action: "rds:StopDBInstance"  # With snapshot option
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Deny  # Security: ...and cannot delete.
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"

          # Deny addition/modification/deletion of operation-enabling tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop": "*"

          # Deny addition/modification/deletion of one-time schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-once": "*"

          # Deny addition/modification/deletion of repetitive schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-periodic": "*"

          # Diagnose permissions errors

          - Effect: Allow
            Action: "sts:DecodeAuthorizationMessage"
            Resource: "*"


  Ec2TagSchedOpsDelete:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All EC2 images, EBS snapshots: delete, but cannot tag for deletion, or create. All EC2 instances, EBS volumes: cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action: "ec2:DescribeImages"
            Resource: "*"
          - Effect: Allow
            Action: "ec2:DescribeSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "ec2:DeregisterImage"
            Resource: "*"  # Resource-level permissions not supported
          - Effect: Allow
            Action: "ec2:DeleteSnapshot"
            Resource: "*"  # Resource-level permissions not supported

          # Security: an entity that deletes cannot create

          - Effect: Deny
            Action: "ec2:CreateImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:CreateSnapshot"
            Resource: "*"

          # Security: an entity that deletes cannot tag for deletion

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"
                  # Repetitive schedule tags:
                  - "managed-start-periodic"
                  - "managed-reboot-periodic"
                  - "managed-reboot-image-periodic"
                  - "managed-image-periodic"
                  - "managed-stop-periodic"
                  # One-time schedule tags:
                  - "managed-start-once"
                  - "managed-reboot-once"
                  - "managed-reboot-image-once"
                  - "managed-image-once"
                  - "managed-stop-once"

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-snapshot"
                  # Repetitive schedule tags:
                  - "managed-snapshot-periodic"
                  # One-time schedule tags:
                  - "managed-snapshot-once"


  RdsTagSchedOpsDelete:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "RDS snapshots tagged for deletion: delete. All RDS snapshots: cannot tag for deletion, or create. All RDS instances: cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Allow
            Action: "rds:DescribeDBSnapshots"
            Resource: "*"
          - Effect: Allow
            Action: "rds:ListTagsForResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Allow
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:snapshot-tag/managed-delete": "*"

          - Effect: Deny  # Security: an entity that deletes cannot create...
            Action: "rds:CreateDBSnapshot"
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Deny  # [another way to create RDS snapshots]
            Action: "rds:StopDBInstance"  # With snapshot option
            Resource:
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
              - !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
          - Effect: Deny  # ...and cannot tag for deletion
            Action: "rds:AddTagsToResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"

          # Deny addition/modification/deletion of operation-enabling tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop": "*"

          # Deny addition/modification/deletion of one-time schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-once": "*"

          # Deny addition/modification/deletion of repetitive schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-periodic": "*"


  Ec2TagSchedOpsNoTag:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All EC2 instances, EBS volumes: cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags. All EC2 images, EBS snapshots: cannot tag for deletion, and cannot delete."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-start"
                  - "managed-reboot"
                  - "managed-reboot-image"
                  - "managed-image"
                  - "managed-stop"
                  # Repetitive schedule tags:
                  - "managed-start-periodic"
                  - "managed-reboot-periodic"
                  - "managed-reboot-image-periodic"
                  - "managed-image-periodic"
                  - "managed-stop-periodic"
                  # One-time schedule tags:
                  - "managed-start-once"
                  - "managed-reboot-once"
                  - "managed-reboot-image-once"
                  - "managed-image-once"
                  - "managed-stop-once"

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:volume/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  # Operation-enabling tags:
                  - "managed-snapshot"
                  # Repetitive schedule tags:
                  - "managed-snapshot-periodic"
                  # One-time schedule tags:
                  - "managed-snapshot-once"

          # Deny addition/modification/deletion of deletion tags

          - Effect: Deny
            Action:
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}::image/*"
              - !Sub "arn:aws:ec2:${AWS::Region}::snapshot/*"
            Condition:
              "ForAnyValue:StringEquals":
                "aws:TagKeys":
                  - "managed-delete"

          # Deny deletion

          - Effect: Deny
            Action: "ec2:DeregisterImage"
            Resource: "*"
          - Effect: Deny
            Action: "ec2:DeleteSnapshot"
            Resource: "*"


  RdsTagSchedOpsNoTag:
    Type: "AWS::IAM::ManagedPolicy"
    DeletionPolicy: Delete
    Properties:
      Description: "All RDS instances: cannot add or delete operational-enabling, one-time schedule, or repetitive schedule tags. All RDS snapshots: cannot tag for deletion, and cannot delete."
      PolicyDocument:
        Version: "2012-10-17"
        Statement:

          # Deny addition/modification/deletion of operation-enabling tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop": "*"

          # Deny addition/modification/deletion of one-time schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-failover-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-once": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-once": "*"

          # Deny addition/modification/deletion of repetitive schedule tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-start-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-reboot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-stop-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-periodic": "*"
          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-snapshot-stop-periodic": "*"

          # Deny addition/modification/deletion of deletion tags

          - Effect: Deny
            Action:
              - "rds:AddTagsToResource"
              - "rds:RemoveTagsFromResource"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
            Condition:
              StringLike:
                "rds:req-tag/managed-delete": "*"

          # Deny deletion

          - Effect: Deny
            Action: "rds:DeleteDBSnapshot"
            Resource: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:snapshot:*"
